2023-10-31 22:01:47,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:01:47,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:01:47,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:01:47,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:02:37,502:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:02:37,502:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:02:37,502:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:02:37,502:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 22:02:41,205:INFO:PyCaret ClassificationExperiment
2023-10-31 22:02:41,205:INFO:Logging name: clf-default-name
2023-10-31 22:02:41,205:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-31 22:02:41,205:INFO:version 3.1.0
2023-10-31 22:02:41,205:INFO:Initializing setup()
2023-10-31 22:02:41,205:INFO:self.USI: 10e4
2023-10-31 22:02:41,205:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'idx', 'X_test', 'fix_imbalance', 'y', 'memory', 'gpu_n_jobs_param', 'exp_name_log', 'exp_id', 'y_train', 'fold_generator', 'html_param', 'gpu_param', 'seed', 'pipeline', 'y_test', 'fold_groups_param', '_ml_usecase', 'is_multiclass', 'data', 'fold_shuffle_param', 'target_param', 'USI', 'X', 'n_jobs_param', 'X_train', 'log_plots_param'}
2023-10-31 22:02:41,205:INFO:Checking environment
2023-10-31 22:02:41,205:INFO:python_version: 3.10.11
2023-10-31 22:02:41,205:INFO:python_build: ('main', 'Jun 11 2023 15:06:43')
2023-10-31 22:02:41,205:INFO:machine: arm64
2023-10-31 22:02:41,205:INFO:platform: macOS-13.5.2-arm64-arm-64bit
2023-10-31 22:02:41,205:INFO:Memory: svmem(total=34359738368, available=17367056384, percent=49.5, used=15412576256, free=4059643904, active=13318897664, inactive=13225771008, wired=2093678592)
2023-10-31 22:02:41,205:INFO:Physical Core: 8
2023-10-31 22:02:41,205:INFO:Logical Core: 8
2023-10-31 22:02:41,205:INFO:Checking libraries
2023-10-31 22:02:41,205:INFO:System:
2023-10-31 22:02:41,205:INFO:    python: 3.10.11 (main, Jun 11 2023, 15:06:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]
2023-10-31 22:02:41,205:INFO:executable: /Users/dkapitan/git/dkapitan/anthology-of-data-science/.venv/bin/python
2023-10-31 22:02:41,205:INFO:   machine: macOS-13.5.2-arm64-arm-64bit
2023-10-31 22:02:41,205:INFO:PyCaret required dependencies:
2023-10-31 22:02:41,221:INFO:                 pip: 23.3.1
2023-10-31 22:02:41,221:INFO:          setuptools: 68.0.0
2023-10-31 22:02:41,221:INFO:             pycaret: 3.1.0
2023-10-31 22:02:41,221:INFO:             IPython: 8.17.2
2023-10-31 22:02:41,221:INFO:          ipywidgets: 8.1.1
2023-10-31 22:02:41,221:INFO:                tqdm: 4.66.1
2023-10-31 22:02:41,221:INFO:               numpy: 1.23.5
2023-10-31 22:02:41,221:INFO:              pandas: 1.5.3
2023-10-31 22:02:41,222:INFO:              jinja2: 3.1.2
2023-10-31 22:02:41,222:INFO:               scipy: 1.10.1
2023-10-31 22:02:41,222:INFO:              joblib: 1.3.2
2023-10-31 22:02:41,222:INFO:             sklearn: 1.2.2
2023-10-31 22:02:41,222:INFO:                pyod: 1.1.1
2023-10-31 22:02:41,222:INFO:            imblearn: 0.11.0
2023-10-31 22:02:41,222:INFO:   category_encoders: 2.6.3
2023-10-31 22:02:41,222:INFO:            lightgbm: 4.1.0
2023-10-31 22:02:41,222:INFO:               numba: 0.58.1
2023-10-31 22:02:41,222:INFO:            requests: 2.31.0
2023-10-31 22:02:41,222:INFO:          matplotlib: 3.7.3
2023-10-31 22:02:41,222:INFO:          scikitplot: 0.3.7
2023-10-31 22:02:41,222:INFO:         yellowbrick: 1.5
2023-10-31 22:02:41,222:INFO:              plotly: 5.18.0
2023-10-31 22:02:41,222:INFO:    plotly-resampler: Not installed
2023-10-31 22:02:41,222:INFO:             kaleido: 0.2.1
2023-10-31 22:02:41,222:INFO:           schemdraw: 0.15
2023-10-31 22:02:41,222:INFO:         statsmodels: 0.14.0
2023-10-31 22:02:41,222:INFO:              sktime: 0.21.1
2023-10-31 22:02:41,222:INFO:               tbats: 1.1.3
2023-10-31 22:02:41,222:INFO:            pmdarima: 2.0.4
2023-10-31 22:02:41,222:INFO:              psutil: 5.9.6
2023-10-31 22:02:41,222:INFO:          markupsafe: 2.1.3
2023-10-31 22:02:41,222:INFO:             pickle5: Not installed
2023-10-31 22:02:41,222:INFO:         cloudpickle: 3.0.0
2023-10-31 22:02:41,222:INFO:         deprecation: 2.1.0
2023-10-31 22:02:41,222:INFO:              xxhash: 3.4.1
2023-10-31 22:02:41,222:INFO:           wurlitzer: 3.0.3
2023-10-31 22:02:41,222:INFO:PyCaret optional dependencies:
2023-10-31 22:02:41,229:INFO:                shap: 0.43.0
2023-10-31 22:02:41,229:INFO:           interpret: Not installed
2023-10-31 22:02:41,229:INFO:                umap: Not installed
2023-10-31 22:02:41,229:INFO:     ydata_profiling: 4.6.1
2023-10-31 22:02:41,229:INFO:  explainerdashboard: Not installed
2023-10-31 22:02:41,229:INFO:             autoviz: Not installed
2023-10-31 22:02:41,229:INFO:           fairlearn: Not installed
2023-10-31 22:02:41,229:INFO:          deepchecks: Not installed
2023-10-31 22:02:41,229:INFO:             xgboost: Not installed
2023-10-31 22:02:41,229:INFO:            catboost: Not installed
2023-10-31 22:02:41,229:INFO:              kmodes: Not installed
2023-10-31 22:02:41,229:INFO:             mlxtend: Not installed
2023-10-31 22:02:41,229:INFO:       statsforecast: Not installed
2023-10-31 22:02:41,230:INFO:        tune_sklearn: Not installed
2023-10-31 22:02:41,230:INFO:                 ray: Not installed
2023-10-31 22:02:41,230:INFO:            hyperopt: Not installed
2023-10-31 22:02:41,230:INFO:              optuna: Not installed
2023-10-31 22:02:41,230:INFO:               skopt: Not installed
2023-10-31 22:02:41,230:INFO:              mlflow: Not installed
2023-10-31 22:02:41,230:INFO:              gradio: Not installed
2023-10-31 22:02:41,230:INFO:             fastapi: Not installed
2023-10-31 22:02:41,230:INFO:             uvicorn: Not installed
2023-10-31 22:02:41,230:INFO:              m2cgen: Not installed
2023-10-31 22:02:41,230:INFO:           evidently: Not installed
2023-10-31 22:02:41,230:INFO:               fugue: Not installed
2023-10-31 22:02:41,230:INFO:           streamlit: Not installed
2023-10-31 22:02:41,230:INFO:             prophet: Not installed
2023-10-31 22:02:41,230:INFO:None
2023-10-31 22:02:41,230:INFO:Set up data.
2023-10-31 22:02:41,232:INFO:Set up folding strategy.
2023-10-31 22:02:41,232:INFO:Set up train/test split.
2023-10-31 22:02:41,234:INFO:Set up index.
2023-10-31 22:02:41,234:INFO:Assigning column types.
2023-10-31 22:02:41,235:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-31 22:02:41,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 22:02:41,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-31 22:02:41,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 22:02:41,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-31 22:02:41,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,305:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-31 22:02:41,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-31 22:02:41,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-31 22:02:41,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,370:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-10-31 22:02:41,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,436:INFO:Preparing preprocessing pipeline...
2023-10-31 22:02:41,436:INFO:Set up simple imputation.
2023-10-31 22:02:41,437:INFO:Set up removing multicollinearity.
2023-10-31 22:02:41,437:INFO:Set up feature normalization.
2023-10-31 22:02:41,450:INFO:Finished creating preprocessing pipeline.
2023-10-31 22:02:41,452:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0r/g9sj6_z95_70k7_pn0h5v0qc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-10-31 22:02:41,452:INFO:Creating final display dataframe.
2023-10-31 22:02:41,490:INFO:Setup _display_container:                     Description             Value
0                    Session id              5752
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (537, 9)
4        Transformed data shape          (537, 9)
5   Transformed train set shape          (375, 9)
6    Transformed test set shape          (162, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Remove multicollinearity              True
13  Multicollinearity threshold               0.9
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              10e4
2023-10-31 22:02:41,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 22:02:41,560:INFO:setup() successfully completed in 0.36s...............
2023-10-31 22:02:41,573:INFO:Initializing compare_models()
2023-10-31 22:02:41,573:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, include=['et', 'lightgbm', 'rf', 'dt'], fold=None, round=4, cross_validation=True, sort=APC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, 'include': ['et', 'lightgbm', 'rf', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'APC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-10-31 22:02:41,573:INFO:Checking exceptions
2023-10-31 22:02:41,574:INFO:Preparing display monitor
2023-10-31 22:02:41,586:INFO:Initializing Extra Trees Classifier
2023-10-31 22:02:41,586:INFO:Total runtime is 1.633167266845703e-06 minutes
2023-10-31 22:02:41,587:INFO:SubProcess create_model() called ==================================
2023-10-31 22:02:41,588:INFO:Initializing create_model()
2023-10-31 22:02:41,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28d900820>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 22:02:41,588:INFO:Checking exceptions
2023-10-31 22:02:41,588:INFO:Importing libraries
2023-10-31 22:02:41,588:INFO:Copying training dataset
2023-10-31 22:02:41,590:INFO:Defining folds
2023-10-31 22:02:41,590:INFO:Declaring metric variables
2023-10-31 22:02:41,591:INFO:Importing untrained model
2023-10-31 22:02:41,601:INFO:Extra Trees Classifier Imported successfully
2023-10-31 22:02:41,625:INFO:Starting cross validation
2023-10-31 22:02:41,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 22:02:43,364:INFO:Calculating mean and std
2023-10-31 22:02:43,365:INFO:Creating metrics dataframe
2023-10-31 22:02:43,368:INFO:Uploading results into container
2023-10-31 22:02:43,368:INFO:Uploading model into container now
2023-10-31 22:02:43,368:INFO:_master_model_container: 1
2023-10-31 22:02:43,368:INFO:_display_container: 2
2023-10-31 22:02:43,369:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False)
2023-10-31 22:02:43,369:INFO:create_model() successfully completed......................................
2023-10-31 22:02:43,451:INFO:SubProcess create_model() end ==================================
2023-10-31 22:02:43,451:INFO:Creating metrics dataframe
2023-10-31 22:02:43,456:INFO:Initializing Light Gradient Boosting Machine
2023-10-31 22:02:43,456:INFO:Total runtime is 0.03116928339004517 minutes
2023-10-31 22:02:43,458:INFO:SubProcess create_model() called ==================================
2023-10-31 22:02:43,458:INFO:Initializing create_model()
2023-10-31 22:02:43,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28d900820>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 22:02:43,458:INFO:Checking exceptions
2023-10-31 22:02:43,458:INFO:Importing libraries
2023-10-31 22:02:43,458:INFO:Copying training dataset
2023-10-31 22:02:43,460:INFO:Defining folds
2023-10-31 22:02:43,460:INFO:Declaring metric variables
2023-10-31 22:02:43,461:INFO:Importing untrained model
2023-10-31 22:02:43,463:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-31 22:02:43,466:INFO:Starting cross validation
2023-10-31 22:02:43,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 22:02:44,777:INFO:Calculating mean and std
2023-10-31 22:02:44,778:INFO:Creating metrics dataframe
2023-10-31 22:02:44,779:INFO:Uploading results into container
2023-10-31 22:02:44,779:INFO:Uploading model into container now
2023-10-31 22:02:44,780:INFO:_master_model_container: 2
2023-10-31 22:02:44,780:INFO:_display_container: 2
2023-10-31 22:02:44,780:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5752, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-31 22:02:44,780:INFO:create_model() successfully completed......................................
2023-10-31 22:02:44,835:INFO:SubProcess create_model() end ==================================
2023-10-31 22:02:44,835:INFO:Creating metrics dataframe
2023-10-31 22:02:44,840:INFO:Initializing Random Forest Classifier
2023-10-31 22:02:44,840:INFO:Total runtime is 0.054246497154235844 minutes
2023-10-31 22:02:44,842:INFO:SubProcess create_model() called ==================================
2023-10-31 22:02:44,842:INFO:Initializing create_model()
2023-10-31 22:02:44,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28d900820>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 22:02:44,842:INFO:Checking exceptions
2023-10-31 22:02:44,842:INFO:Importing libraries
2023-10-31 22:02:44,842:INFO:Copying training dataset
2023-10-31 22:02:44,843:INFO:Defining folds
2023-10-31 22:02:44,843:INFO:Declaring metric variables
2023-10-31 22:02:44,845:INFO:Importing untrained model
2023-10-31 22:02:44,846:INFO:Random Forest Classifier Imported successfully
2023-10-31 22:02:44,849:INFO:Starting cross validation
2023-10-31 22:02:44,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 22:02:45,184:INFO:Calculating mean and std
2023-10-31 22:02:45,185:INFO:Creating metrics dataframe
2023-10-31 22:02:45,186:INFO:Uploading results into container
2023-10-31 22:02:45,186:INFO:Uploading model into container now
2023-10-31 22:02:45,187:INFO:_master_model_container: 3
2023-10-31 22:02:45,187:INFO:_display_container: 2
2023-10-31 22:02:45,187:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5752, verbose=0, warm_start=False)
2023-10-31 22:02:45,187:INFO:create_model() successfully completed......................................
2023-10-31 22:02:45,243:INFO:SubProcess create_model() end ==================================
2023-10-31 22:02:45,243:INFO:Creating metrics dataframe
2023-10-31 22:02:45,248:INFO:Initializing Decision Tree Classifier
2023-10-31 22:02:45,248:INFO:Total runtime is 0.061036801338195806 minutes
2023-10-31 22:02:45,249:INFO:SubProcess create_model() called ==================================
2023-10-31 22:02:45,250:INFO:Initializing create_model()
2023-10-31 22:02:45,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28d900820>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 22:02:45,250:INFO:Checking exceptions
2023-10-31 22:02:45,250:INFO:Importing libraries
2023-10-31 22:02:45,250:INFO:Copying training dataset
2023-10-31 22:02:45,251:INFO:Defining folds
2023-10-31 22:02:45,251:INFO:Declaring metric variables
2023-10-31 22:02:45,253:INFO:Importing untrained model
2023-10-31 22:02:45,254:INFO:Decision Tree Classifier Imported successfully
2023-10-31 22:02:45,256:INFO:Starting cross validation
2023-10-31 22:02:45,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 22:02:45,311:INFO:Calculating mean and std
2023-10-31 22:02:45,312:INFO:Creating metrics dataframe
2023-10-31 22:02:45,314:INFO:Uploading results into container
2023-10-31 22:02:45,314:INFO:Uploading model into container now
2023-10-31 22:02:45,314:INFO:_master_model_container: 4
2023-10-31 22:02:45,314:INFO:_display_container: 2
2023-10-31 22:02:45,314:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5752, splitter='best')
2023-10-31 22:02:45,314:INFO:create_model() successfully completed......................................
2023-10-31 22:02:45,370:INFO:SubProcess create_model() end ==================================
2023-10-31 22:02:45,370:INFO:Creating metrics dataframe
2023-10-31 22:02:45,379:INFO:Initializing create_model()
2023-10-31 22:02:45,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-31 22:02:45,379:INFO:Checking exceptions
2023-10-31 22:02:45,380:INFO:Importing libraries
2023-10-31 22:02:45,380:INFO:Copying training dataset
2023-10-31 22:02:45,381:INFO:Defining folds
2023-10-31 22:02:45,381:INFO:Declaring metric variables
2023-10-31 22:02:45,381:INFO:Importing untrained model
2023-10-31 22:02:45,381:INFO:Declaring custom model
2023-10-31 22:02:45,382:INFO:Extra Trees Classifier Imported successfully
2023-10-31 22:02:45,382:INFO:Cross validation set to False
2023-10-31 22:02:45,382:INFO:Fitting Model
2023-10-31 22:02:45,464:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False)
2023-10-31 22:02:45,464:INFO:create_model() successfully completed......................................
2023-10-31 22:02:45,530:INFO:_master_model_container: 4
2023-10-31 22:02:45,530:INFO:_display_container: 2
2023-10-31 22:02:45,530:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False)
2023-10-31 22:02:45,530:INFO:compare_models() successfully completed......................................
2023-10-31 22:02:45,541:INFO:Initializing predict_model()
2023-10-31 22:02:45,541:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x285a341f0>)
2023-10-31 22:02:45,542:INFO:Checking exceptions
2023-10-31 22:02:45,542:INFO:Preloading libraries
2023-10-31 22:02:45,543:INFO:Set up data.
2023-10-31 22:02:45,544:INFO:Set up index.
2023-10-31 22:02:45,658:INFO:Initializing evaluate_model()
2023-10-31 22:02:45,658:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-10-31 22:02:45,663:INFO:Initializing plot_model()
2023-10-31 22:02:45,664:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>, system=True)
2023-10-31 22:02:45,664:INFO:Checking exceptions
2023-10-31 22:02:45,679:INFO:Preloading libraries
2023-10-31 22:02:45,683:INFO:Copying training dataset
2023-10-31 22:02:45,683:INFO:Plot type: pipeline
2023-10-31 22:02:45,768:INFO:Visual Rendered Successfully
2023-10-31 22:02:45,835:INFO:plot_model() successfully completed......................................
2023-10-31 22:02:45,874:INFO:Initializing interpret_model()
2023-10-31 22:02:45,875:INFO:interpret_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>)
2023-10-31 22:02:45,875:INFO:Checking exceptions
2023-10-31 22:02:45,875:INFO:Soft dependency imported: shap: 0.43.0
2023-10-31 22:02:45,900:INFO:plot type: summary
2023-10-31 22:02:45,900:INFO:Creating TreeExplainer
2023-10-31 22:02:45,905:INFO:Compiling shap values
2023-10-31 22:02:46,437:INFO:Visual Rendered Successfully
2023-10-31 22:02:46,437:INFO:interpret_model() successfully completed......................................
2023-10-31 22:02:46,506:INFO:Initializing interpret_model()
2023-10-31 22:02:46,506:INFO:interpret_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=1, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>)
2023-10-31 22:02:46,506:INFO:Checking exceptions
2023-10-31 22:02:46,506:INFO:Soft dependency imported: shap: 0.43.0
2023-10-31 22:02:46,517:INFO:plot type: reason
2023-10-31 22:02:46,517:INFO:model type detected: type 1
2023-10-31 22:02:46,517:INFO:Creating TreeExplainer
2023-10-31 22:02:46,520:INFO:Compiling shap values
2023-10-31 22:02:46,520:INFO:model type detected: Unknown
2023-10-31 22:02:46,526:INFO:Visual Rendered Successfully
2023-10-31 22:02:46,526:INFO:interpret_model() successfully completed......................................
2023-10-31 22:02:46,600:INFO:Initializing interpret_model()
2023-10-31 22:02:46,600:INFO:interpret_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5752, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x285ae01f0>)
2023-10-31 22:02:46,601:INFO:Checking exceptions
2023-10-31 22:02:46,601:INFO:Soft dependency imported: shap: 0.43.0
2023-10-31 22:02:46,611:INFO:plot type: reason
2023-10-31 22:02:46,611:INFO:model type detected: type 1
2023-10-31 22:02:46,611:INFO:Creating TreeExplainer
2023-10-31 22:02:46,614:INFO:Compiling shap values
2023-10-31 22:02:46,614:WARNING:Observation set to None. Model agnostic plot will be rendered.
2023-10-31 22:02:47,016:INFO:Visual Rendered Successfully
2023-10-31 22:02:47,016:INFO:interpret_model() successfully completed......................................
